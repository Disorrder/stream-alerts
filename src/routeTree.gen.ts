/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WImport } from './routes/w'
import { Route as AuthImport } from './routes/auth'
import { Route as AppImport } from './routes/_app'
import { Route as AppIndexImport } from './routes/_app.index'
import { Route as AuthTwitchCallbackImport } from './routes/auth.twitch-callback'
import { Route as AppWidgetsImport } from './routes/_app.widgets'
import { Route as AppSettingsImport } from './routes/_app.settings'
import { Route as AppLogsImport } from './routes/_app.logs'
import { Route as AppEventsImport } from './routes/_app.events'

// Create/Update Routes

const WRoute = WImport.update({
  id: '/w',
  path: '/w',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const AuthTwitchCallbackRoute = AuthTwitchCallbackImport.update({
  id: '/twitch-callback',
  path: '/twitch-callback',
  getParentRoute: () => AuthRoute,
} as any)

const AppWidgetsRoute = AppWidgetsImport.update({
  id: '/widgets',
  path: '/widgets',
  getParentRoute: () => AppRoute,
} as any)

const AppSettingsRoute = AppSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppRoute,
} as any)

const AppLogsRoute = AppLogsImport.update({
  id: '/logs',
  path: '/logs',
  getParentRoute: () => AppRoute,
} as any)

const AppEventsRoute = AppEventsImport.update({
  id: '/events',
  path: '/events',
  getParentRoute: () => AppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/w': {
      id: '/w'
      path: '/w'
      fullPath: '/w'
      preLoaderRoute: typeof WImport
      parentRoute: typeof rootRoute
    }
    '/_app/events': {
      id: '/_app/events'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof AppEventsImport
      parentRoute: typeof AppImport
    }
    '/_app/logs': {
      id: '/_app/logs'
      path: '/logs'
      fullPath: '/logs'
      preLoaderRoute: typeof AppLogsImport
      parentRoute: typeof AppImport
    }
    '/_app/settings': {
      id: '/_app/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppSettingsImport
      parentRoute: typeof AppImport
    }
    '/_app/widgets': {
      id: '/_app/widgets'
      path: '/widgets'
      fullPath: '/widgets'
      preLoaderRoute: typeof AppWidgetsImport
      parentRoute: typeof AppImport
    }
    '/auth/twitch-callback': {
      id: '/auth/twitch-callback'
      path: '/twitch-callback'
      fullPath: '/auth/twitch-callback'
      preLoaderRoute: typeof AuthTwitchCallbackImport
      parentRoute: typeof AuthImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppEventsRoute: typeof AppEventsRoute
  AppLogsRoute: typeof AppLogsRoute
  AppSettingsRoute: typeof AppSettingsRoute
  AppWidgetsRoute: typeof AppWidgetsRoute
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppEventsRoute: AppEventsRoute,
  AppLogsRoute: AppLogsRoute,
  AppSettingsRoute: AppSettingsRoute,
  AppWidgetsRoute: AppWidgetsRoute,
  AppIndexRoute: AppIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthTwitchCallbackRoute: typeof AuthTwitchCallbackRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthTwitchCallbackRoute: AuthTwitchCallbackRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AppRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/w': typeof WRoute
  '/events': typeof AppEventsRoute
  '/logs': typeof AppLogsRoute
  '/settings': typeof AppSettingsRoute
  '/widgets': typeof AppWidgetsRoute
  '/auth/twitch-callback': typeof AuthTwitchCallbackRoute
  '/': typeof AppIndexRoute
}

export interface FileRoutesByTo {
  '/auth': typeof AuthRouteWithChildren
  '/w': typeof WRoute
  '/events': typeof AppEventsRoute
  '/logs': typeof AppLogsRoute
  '/settings': typeof AppSettingsRoute
  '/widgets': typeof AppWidgetsRoute
  '/auth/twitch-callback': typeof AuthTwitchCallbackRoute
  '/': typeof AppIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/w': typeof WRoute
  '/_app/events': typeof AppEventsRoute
  '/_app/logs': typeof AppLogsRoute
  '/_app/settings': typeof AppSettingsRoute
  '/_app/widgets': typeof AppWidgetsRoute
  '/auth/twitch-callback': typeof AuthTwitchCallbackRoute
  '/_app/': typeof AppIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/auth'
    | '/w'
    | '/events'
    | '/logs'
    | '/settings'
    | '/widgets'
    | '/auth/twitch-callback'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/w'
    | '/events'
    | '/logs'
    | '/settings'
    | '/widgets'
    | '/auth/twitch-callback'
    | '/'
  id:
    | '__root__'
    | '/_app'
    | '/auth'
    | '/w'
    | '/_app/events'
    | '/_app/logs'
    | '/_app/settings'
    | '/_app/widgets'
    | '/auth/twitch-callback'
    | '/_app/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  WRoute: typeof WRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  WRoute: WRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/auth",
        "/w"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/events",
        "/_app/logs",
        "/_app/settings",
        "/_app/widgets",
        "/_app/"
      ]
    },
    "/auth": {
      "filePath": "auth.tsx",
      "children": [
        "/auth/twitch-callback"
      ]
    },
    "/w": {
      "filePath": "w.tsx"
    },
    "/_app/events": {
      "filePath": "_app.events.tsx",
      "parent": "/_app"
    },
    "/_app/logs": {
      "filePath": "_app.logs.tsx",
      "parent": "/_app"
    },
    "/_app/settings": {
      "filePath": "_app.settings.tsx",
      "parent": "/_app"
    },
    "/_app/widgets": {
      "filePath": "_app.widgets.tsx",
      "parent": "/_app"
    },
    "/auth/twitch-callback": {
      "filePath": "auth.twitch-callback.tsx",
      "parent": "/auth"
    },
    "/_app/": {
      "filePath": "_app.index.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
